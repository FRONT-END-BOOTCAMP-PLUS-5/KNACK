generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(uuid()) @db.Uuid
  name           String          @db.VarChar
  email          String          @unique @db.VarChar
  password       String          @db.VarChar
  deletedAt      DateTime?       @map("deleted_at") @db.Timestamptz(6)
  createdAt      DateTime?       @default(now()) @map("created_at") @db.Timestamptz(6)
  marketing      Boolean         @default(false)
  sns            Boolean         @default(false)
  profileImage   String?         @map("profile_image") @db.VarChar
  point          Int             @default(0)
  isActive       Boolean         @default(true) @map("is_active")
  nickname       String          @db.VarChar
  addresses      Address[]
  brandLike      BrandLike[]
  carts          Cart[]
  couponMappings CouponMapping[]
  orders         Order[]
  payments       Payment[]
  productLike    ProductLike[]
  reviews        Review[]
  userAuths      UserAuth[]

  @@map("users")
}

model UserAuth {
  id           Int    @id @default(autoincrement())
  provider     String @db.VarChar
  providerId   String @unique @map("provider_id") @db.VarChar
  passwordHash String @map("password_hash") @db.VarChar
  userId       String @map("user_id") @db.Uuid
  user         User   @relation(fields: [userId], references: [id])

  @@map("user_auths")
}

model Admin {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar
  password  String    @db.VarChar
  role      String?   @default("관리자") @db.VarChar
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  ads       Ad[]
  answers   Answer[]

  @@map("admins")
}

model Ad {
  id           Int       @id @default(autoincrement())
  adminId      Int       @map("admin_id")
  name         String    @db.VarChar
  imgUrl       String    @map("img_url") @db.VarChar
  redirectUrl  String?   @default("/") @map("redirect_url") @db.VarChar
  primary      Int?      @default(0)
  createdAt    DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  isActive     Boolean   @default(false) @map("is_active")
  activateTime DateTime? @map("activate_time") @db.Timestamptz(6)
  price        Int?      @default(0)
  admin        Admin     @relation(fields: [adminId], references: [id])

  @@map("ads")
}

model RelatedProduct {
  productId        Int     @map("product_id")
  relatedProductId Int     @map("related_product_id")
  product          Product @relation("ProductRelated", fields: [productId], references: [id])
  relatedProduct   Product @relation("RelatedToProduct", fields: [relatedProductId], references: [id])

  @@id([productId, relatedProductId])
  @@map("related_products")
}

model Product {
  id                               Int                    @id @default(autoincrement())
  descriptionText                  String?                @map("description_text") @db.VarChar
  thumbnailImage                   String                 @map("thumbnail_image") @db.VarChar
  subImages                        String?                @map("sub_images") @db.VarChar
  price                            Int?                   @default(0)
  discountPercent                  Int?                   @default(0) @map("discount_percent")
  brandId                          Int                    @map("brand_id")
  categoryId                       Int                    @map("category_id")
  isRecommended                    Boolean                @default(false) @map("is_recommended")
  isPrivate                        Boolean                @default(true) @map("is_private")
  createdAt                        DateTime?              @default(now()) @map("created_at") @db.Timestamptz(6)
  gender                           String?                @default("all") @db.VarChar
  hit                              Int?                   @default(0)
  engName                          String                 @map("eng_name") @db.VarChar
  korName                          String                 @map("kor_name") @db.VarChar
  subCategoryId                    Int                    @map("sub_category_id")
  colorEngName                     String                 @map("color_eng_name") @db.VarChar
  colorKorName                     String                 @map("color_kor_name") @db.VarChar
  modelNumber                      String?                @map("model_number")
  releaseDate                      String?                @map("release_date") @db.VarChar
  detailImages                     String?                @map("detail_images") @db.VarChar
  topImages                        String?                @map("top_images") @db.VarChar
  keywordColorId                   Int                    @map("keyword_color_id")
  carts                            Cart[]
  coupons                          Coupon[]
  inquires                         Inquiry[]
  orders                           Order[]
  productLike                      ProductLike[]
  productOptionMappings            ProductOptionMapping[]
  productStockMapping              ProductStockMapping[]
  brand                            Brand                  @relation(fields: [brandId], references: [id])
  category                         Category               @relation(fields: [categoryId], references: [id])
  optionValue                      OptionValue            @relation(fields: [keywordColorId], references: [id])
  subCategory                      SubCategory            @relation(fields: [subCategoryId], references: [id])
  relatedProducts_ProductRelated   RelatedProduct[]       @relation("ProductRelated")
  relatedProducts_RelatedToProduct RelatedProduct[]       @relation("RelatedToProduct")
  reviews                          Review[]

  @@map("products")
}

model ProductStockMapping {
  id            Int         @id @default(autoincrement())
  productId     Int         @map("product_id")
  stock         Int         @default(0)
  optionTypeId  Int         @map("option_type_id")
  optionValueId Int         @map("option_value_id")
  optionType    OptionType  @relation(fields: [optionTypeId], references: [id])
  optionValue   OptionValue @relation(fields: [optionValueId], references: [id])
  product       Product     @relation(fields: [productId], references: [id])

  @@map("product_stock_mappings")
}

model Coupon {
  id             Int             @id @default(autoincrement())
  name           String          @db.VarChar
  salePercent    Int?            @default(0) @map("sale_percent")
  productId      Int             @map("product_id")
  createdAt      DateTime?       @default(now()) @map("created_at") @db.Timestamptz(6)
  expirationAt   DateTime?       @map("expriation_at") @db.Timestamptz(6)
  couponMappings CouponMapping[]
  product        Product         @relation(fields: [productId], references: [id])

  @@map("coupons")
}

model CouponMapping {
  id        Int       @id @default(autoincrement())
  userId    String    @map("user_id") @db.Uuid
  couponId  Int       @map("coupon_id")
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  coupon    Coupon    @relation(fields: [couponId], references: [id])
  user      User      @relation(fields: [userId], references: [id])

  @@map("coupon_mappings")
}

model Answer {
  inquiryId Int       @map("inquiry_id")
  adminId   Int       @map("admin_id")
  contents  String    @db.VarChar
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  admin     Admin     @relation(fields: [adminId], references: [id])
  inquiry   Inquiry   @relation(fields: [inquiryId], references: [id])

  @@id([inquiryId, adminId])
  @@map("answers")
}

model Inquiry {
  id        Int       @id @default(autoincrement())
  productId Int       @map("product_id")
  contents  String    @db.VarChar
  isPrivate Boolean   @default(false) @map("is_private")
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  answers   Answer[]
  product   Product   @relation(fields: [productId], references: [id])

  @@map("inquires")
}

model Review {
  userId       String    @map("user_id") @db.Uuid
  productId    Int       @map("product_id")
  contents     String    @db.VarChar
  rating       Int?      @default(0)
  reviewImages String?   @map("review_images") @db.VarChar
  createdAt    DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  orderId      Int       @map("order_id")
  id           Int       @id @default(autoincrement())
  order        Order     @relation(fields: [orderId], references: [id])
  product      Product   @relation(fields: [productId], references: [id])
  user         User      @relation(fields: [userId], references: [id])

  @@map("reviews")
}

model OptionType {
  id                    Int                    @id @default(autoincrement())
  name                  String                 @db.VarChar
  isPrivate             Boolean                @default(true) @map("is_private")
  optionValue           OptionValue[]
  productOptionMappings ProductOptionMapping[]
  productStockMapping   ProductStockMapping[]

  @@map("option_types")
}

model OptionValue {
  id                  Int                   @id @default(autoincrement())
  isPrivate           Boolean               @default(true) @map("is_private")
  name                String                @db.VarChar
  typeId              Int                   @map("type_id")
  cart                Cart[]
  optionTypes         OptionType            @relation(fields: [typeId], references: [id])
  order               Order[]
  productStockMapping ProductStockMapping[]
  product             Product[]

  @@map("option_values")
}

model ProductOptionMapping {
  id           Int        @id @default(autoincrement())
  productId    Int        @map("product_id")
  optionTypeId Int        @map("option_type_id")
  optionType   OptionType @relation(fields: [optionTypeId], references: [id])
  product      Product    @relation(fields: [productId], references: [id])

  @@map("product_option_mappings")
}

model Brand {
  id        Int         @id @default(autoincrement())
  logoImage String      @map("logo_image") @db.VarChar
  isPrivate Boolean     @default(true) @map("is_private")
  engName   String      @map("eng_name") @db.VarChar
  korName   String      @map("kor_name") @db.VarChar
  brandLike BrandLike[]
  products  Product[]

  @@map("brands")
}

model Category {
  id            Int           @id @default(autoincrement())
  createdAt     DateTime?     @default(now()) @map("created_at") @db.Timestamptz(6)
  isPrivate     Boolean       @default(true) @map("is_private")
  engName       String        @map("eng_name") @db.VarChar
  korName       String        @map("kor_name") @db.VarChar
  products      Product[]
  subCategories SubCategory[]

  @@map("categories")
}

model SubCategory {
  id         Int       @id @default(autoincrement())
  categoryId Int       @map("category_id")
  createdAt  DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  isPrivate  Boolean   @default(true) @map("is_private")
  engName    String    @map("eng_name") @db.VarChar
  korName    String    @map("kor_name") @db.VarChar
  image      String?   @db.VarChar
  products   Product[]
  category   Category  @relation(fields: [categoryId], references: [id])

  @@map("sub_categories")
}

model ProductLike {
  userId    String    @map("user_id") @db.Uuid
  productId Int       @map("product_id")
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  product   Product   @relation(fields: [productId], references: [id])
  user      User      @relation(fields: [userId], references: [id])

  @@id([userId, productId])
  @@map("product_likes")
}

model BrandLike {
  userId    String    @map("user_id") @db.Uuid
  brandId   Int       @map("brand_id")
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  brand     Brand     @relation(fields: [brandId], references: [id])
  user      User      @relation(fields: [userId], references: [id])

  @@id([userId, brandId])
  @@map("brand_likes")
}

model Order {
  id             Int         @id @default(autoincrement())
  userId         String      @map("user_id") @db.Uuid
  productId      Int         @map("product_id")
  price          Int?        @default(0)
  salePrice      Int?        @default(0) @map("sale_price")
  tracking       String?     @db.VarChar
  createdAt      DateTime?   @default(now()) @map("created_at") @db.Timestamptz(6)
  deliveryStatus Int?        @map("delivery_status")
  count          Int?        @default(0)
  paymentId      Int?        @map("payment_id")
  optionValueId  Int         @map("option_value_id")
  couponPrice    Int         @default(0) @map("coupon_price")
  point          Int         @default(0)
  optionValue    OptionValue @relation(fields: [optionValueId], references: [id])
  payment        Payment?    @relation(fields: [paymentId], references: [id])
  product        Product     @relation(fields: [productId], references: [id])
  user           User        @relation(fields: [userId], references: [id])
  review         Review[]

  @@map("orders")
}

model Payment {
  id             Int       @id @default(autoincrement())
  userId         String    @map("user_id") @db.Uuid
  price          Int?      @default(0)
  createdAt      DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  paymentNumber  BigInt    @map("payment_number")
  addressId      Int       @map("address_id")
  approvedAt     DateTime? @map("approved_at") @db.Timestamptz(6)
  method         String    @db.VarChar
  status         String    @db.VarChar
  tossPaymentKey String?   @unique @map("toss_payment_key") @db.VarChar
  orders         Order[]
  address        Address   @relation(fields: [addressId], references: [id])
  user           User      @relation(fields: [userId], references: [id])

  @@map("payments")
}

model Address {
  id        Int       @id @default(autoincrement())
  userId    String    @map("user_id") @db.Uuid
  name      String    @db.VarChar
  phone     String?   @db.VarChar
  zipCode   String    @map("zip_code") @db.VarChar
  detail    String?   @db.VarChar
  main      String    @db.VarChar
  message   String?   @db.VarChar
  isDefault Boolean   @default(false) @map("is_default")
  user      User      @relation(fields: [userId], references: [id])
  payments  Payment[]

  @@map("addresses")
}

model Cart {
  id            Int         @id @default(autoincrement())
  userId        String      @map("user_id") @db.Uuid
  productId     Int         @map("product_id")
  createdAt     DateTime?   @default(now()) @map("created_at") @db.Timestamptz(6)
  count         Int?        @default(1)
  optionValueId Int         @map("option_value_id")
  optionValue   OptionValue @relation(fields: [optionValueId], references: [id])
  product       Product     @relation(fields: [productId], references: [id])
  user          User        @relation(fields: [userId], references: [id])

  @@map("carts")
}
